# FIREBASE EXTENSION: Build Chatbot with the Gemini API
# SOURCE: https://extensions.dev/extensions/googlecloud/firestore-genai-chatbot
# STATUS: âœ… GA (General Availability) - Production Ready
# VERSION: 0.2.5 (Latest as of August 2025)

# ============================================================================
# GEMINI API CONFIGURATION
# ============================================================================

# Gemini API Provider (Required)
# Options: 'vertex-ai-gemini-api' | 'gemini-developer-api'
# Production Recommendation: 'vertex-ai-gemini-api' for enterprise features
GEMINI_API_PROVIDER=vertex-ai-gemini-api

# Gemini Model (Required) 
# Options: 'gemini-1.5-flash' | 'gemini-1.5-pro' | 'gemini-1.0-pro'
# Recommendation: 'gemini-1.5-flash' for speed, 'gemini-1.5-pro' for quality
GEMINI_MODEL=gemini-1.5-flash

# Vertex AI Location (Required if using vertex-ai-gemini-api)
# Recommendation: Use region closest to your users
VERTEX_AI_LOCATION=us-central1

# ============================================================================
# FIRESTORE CONFIGURATION - WORLD-CLASS ARCHITECTURE
# ============================================================================

# Collection Path for Discussions
# WORLD-CLASS PATTERN: Scoped to user for privacy isolation
DISCUSSIONS_COLLECTION_PATH=users/{uid}/aiDiscussions

# Collection Path for Messages  
# WORLD-CLASS PATTERN: Subcollection for unlimited scaling
MESSAGES_COLLECTION_PATH=users/{uid}/aiDiscussions/{discussionId}/messages

# Response Field (Optional)
# Field name for storing AI responses
RESPONSE_FIELD=response

# ============================================================================
# AI BEHAVIOR CONFIGURATION
# ============================================================================

# Context Prompt (Optional)
# Customize AI personality for relationship context
CONTEXT_PROMPT=You are a thoughtful, empathetic AI assistant helping users maintain meaningful relationships. You provide gentle, non-judgmental guidance for relationship challenges, memory assistance for important moments, and suggestions for deepening connections. Always prioritize user privacy and emotional wellbeing. If users share sensitive emotional information, respond with care and suggest professional support when appropriate.

# Generation Configuration (Optional)
# JSON object with model parameters
GENERATION_CONFIG={
  "temperature": 0.7,
  "topP": 0.95,
  "topK": 40,
  "maxOutputTokens": 1000,
  "responseMimeType": "text/plain"
}

# Safety Settings (Optional)
# Configure content filtering - strict for emotional content
SAFETY_SETTINGS=[
  {"category": "HARM_CATEGORY_HARASSMENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
  {"category": "HARM_CATEGORY_HATE_SPEECH", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
  {"category": "HARM_CATEGORY_SEXUALLY_EXPLICIT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
  {"category": "HARM_CATEGORY_DANGEROUS_CONTENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"}
]

# ============================================================================
# PRIVACY AND SECURITY CONFIGURATION
# ============================================================================

# Enable User Authentication (Required)
# Ensures only authenticated users can access chatbot
ENABLE_USER_AUTH=true

# User Field Name (Optional)
# Field to store user ID for audit and privacy
USER_FIELD_NAME=userId

# Enable Message Metadata (Optional)
# Store additional metadata for privacy compliance
ENABLE_MESSAGE_METADATA=true

# ============================================================================
# PERFORMANCE AND SCALING CONFIGURATION
# ============================================================================

# Response Timeout (Optional)
# Maximum time to wait for AI response (milliseconds)
RESPONSE_TIMEOUT_MS=10000

# Enable Caching (Optional)
# Cache similar queries to improve performance and reduce costs
ENABLE_RESPONSE_CACHING=true

# Cache TTL (Optional)
# Time-to-live for cached responses (seconds)
CACHE_TTL_SECONDS=3600

# ============================================================================
# MONITORING AND ANALYTICS CONFIGURATION
# ============================================================================

# Enable Usage Analytics (Optional)
# Track usage for cost monitoring and optimization
ENABLE_USAGE_ANALYTICS=true

# Analytics Collection Path (Optional)
# Where to store usage analytics (privacy-compliant)
ANALYTICS_COLLECTION_PATH=analytics/gemini_usage

# Enable Error Logging (Optional)
# Log errors for debugging and monitoring
ENABLE_ERROR_LOGGING=true

# ============================================================================
# ECOMIND-SPECIFIC CUSTOMIZATIONS
# ============================================================================

# Relationship Context Integration
# Enable integration with relationship data for personalized responses
ENABLE_RELATIONSHIP_CONTEXT=false

# Emotional Intelligence Mode
# Enable emotional tone analysis and empathetic responses
ENABLE_EMOTIONAL_INTELLIGENCE=false

# Privacy Mode
# Extra privacy protections for sensitive relationship data
PRIVACY_MODE=strict

# ============================================================================
# DEPLOYMENT CONFIGURATION
# ============================================================================

# Extension Instance ID (Optional)
# Unique identifier for this extension instance
EXTENSION_INSTANCE_ID=ecomind-gemini-chatbot

# Deployment Region (Optional)
# Region for Cloud Functions deployment
DEPLOYMENT_REGION=us-central1

# ============================================================================
# COST OPTIMIZATION CONFIGURATION
# ============================================================================

# Enable Cost Controls (Optional)
# Set daily/monthly spending limits
ENABLE_COST_CONTROLS=true

# Daily Token Limit (Optional)
# Maximum tokens per day to control costs
DAILY_TOKEN_LIMIT=100000

# Rate Limiting (Optional)
# Requests per minute per user
RATE_LIMIT_PER_USER=10

# ============================================================================
# INTEGRATION SETTINGS
# ============================================================================

# Webhook URL (Optional)
# Endpoint for real-time notifications
WEBHOOK_URL=

# Enable Webhooks (Optional)
# Send webhooks for chat events
ENABLE_WEBHOOKS=false

# Custom Headers (Optional)
# Additional headers for webhook requests
CUSTOM_HEADERS=

# ============================================================================
# NOTES AND DOCUMENTATION LINKS
# ============================================================================

# Official Documentation:
# https://extensions.dev/extensions/googlecloud/firestore-genai-chatbot

# Gemini API Documentation:
# https://ai.google.dev/docs

# Firebase Extensions Hub:
# https://extensions.dev/

# Pricing Information:
# https://cloud.google.com/vertex-ai/pricing

# Support and Issues:
# https://github.com/GoogleCloudPlatform/firebase-extensions/issues